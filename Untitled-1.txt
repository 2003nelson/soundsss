import java.util.*;

class TACGenerator {
    private int tempCount = 0;  // Contador de variables temporales
    private List<String> tacCode = new ArrayList<>(); // Almacena instrucciones TAC

    // Método para generar un nuevo temporal
    private String newTemp() {
        return "t" + (tempCount++);
    }

    // Método principal para generar TAC
    public void generateTAC(String expression) {
        tacCode.clear();
        tempCount = 0;
        Stack<String> operators = new Stack<>();
        Stack<String> operands = new Stack<>();

        // Dividir la expresión en tokens
        String[] tokens = expression.split("\\s+");

        for (String token : tokens) {
            if (token.matches("[a-zA-Z]+")) { // Si es variable
                operands.push(token);
            } else if (token.matches("[+\\-*/]")) { // Si es operador
                operators.push(token);
            } else if (token.equals("=")) { // Si es asignación
                String left = operands.pop();
                String right = operands.pop();
                tacCode.add(left + " = " + right);
            } else { // Si es número
                operands.push(token);
            }

            if (!operators.isEmpty() && operands.size() > 1) {
                String op2 = operands.pop();
                String op1 = operands.pop();
                String op = operators.pop();
                String temp = newTemp();
                tacCode.add(temp + " = " + op1 + " " + op + " " + op2);
                operands.push(temp);
            }
        }
    }

    // Mostrar el código generado
    public void printTAC() {
        for (String line : tacCode) {
            System.out.println(line);
        }
    }

    public static void main(String[] args) {
        TACGenerator tac = new TACGenerator();
        String expression = "a = b + c * d";
        System.out.println("Expresión de entrada: " + expression);
        tac.generateTAC(expression);
        System.out.println("\nCódigo Intermedio en Tres Direcciones:");
        tac.printTAC();
    }
}
